<0>          DESCRIPTOR_NAME: string  ; the first 8 chars are always WAVEDESC
<16>          TEMPLATE_NAME: string    
<32>          COMM_TYPE: enum          ; chosen by remote command COMM_FORMAT
<34>          COMM_ORDER: enum         
<36>          WAVE_DESCRIPTOR: long    ; length in bytes of block WAVEDESC
<40>          USER_TEXT: long          ; length in bytes of block USERTEXT
<44>          RES_DESC1: long          ;
<48>          TRIGTIME_ARRAY: long     ; length in bytes of TRIGTIME array
<52>          RIS_TIME_ARRAY: long     ; length in bytes of RIS_TIME array
<56>          RES_ARRAY1: long         ; an expansion entry is reserved
<60>          WAVE_ARRAY_1: long       ; length in bytes of 1st simple
<64>          WAVE_ARRAY_2: long       ; length in bytes of 2nd simple
<68>          RES_ARRAY2: long         
<72>          RES_ARRAY3: long         ; 2 expansion entries are reserved
<76>          INSTRUMENT_NAME: string  
<92>          INSTRUMENT_NUMBER: long  
<96>          TRACE_LABEL: string      ; identifies the waveform.
<112>          RESERVED1: word          
<114>          RESERVED2: word          ; 2 expansion entries
<116>          WAVE_ARRAY_COUNT: long   ; number of data points in the data
<120>          PNTS_PER_SCREEN: long    ; nominal number of data points
<124>          FIRST_VALID_PNT: long    ; count of number of points to skip
<128>          LAST_VALID_PNT: long     ; index of last good data point
<132>          FIRST_POINT: long        ; for input and output, indicates
<136>          SPARSING_FACTOR: long    ; for input and output, indicates
<140>          SEGMENT_INDEX: long      ; for input and output, indicates the
<144>          SUBARRAY_COUNT: long     ; for Sequence, acquired segment count,
<148>          SWEEPS_PER_ACQ: long     ; for Average or Extrema,
<152>          POINTS_PER_PAIR: word    ; for Peak Dectect waveforms (which always
<154>          PAIR_OFFSET: word        ; for Peak Dectect waveforms only
<156>          VERTICAL_GAIN: float     
<160>          VERTICAL_OFFSET: float   ; to get floating values from raw data :
<164>          MAX_VALUE: float         ; maximum allowed value. It corresponds
<168>          MIN_VALUE: float         ; minimum allowed value. It corresponds
<172>          NOMINAL_BITS: word       ; a measure of the intrinsic precision
<174>          NOM_SUBARRAY_COUNT: word ; for Sequence, nominal segment count
<176>          HORIZ_INTERVAL: float    ; sampling interval for time domain
<180>          HORIZ_OFFSET: double     ; trigger offset for the first sweep of
<188>          PIXEL_OFFSET: double     ; needed to know how to display the
<196>          VERTUNIT: unit_definition  ; units of the vertical axis
<244>          HORUNIT: unit_definition   ; units of the horizontal axis
<292>          HORIZ_UNCERTAINTY: float ; uncertainty from one acquisition to the
<296>          TRIGGER_TIME: time_stamp ; time of the trigger
<312>          ACQ_DURATION: float      ; duration of the acquisition (in sec)
<316>          RECORD_TYPE: enum        
<318>          PROCESSING_DONE: enum    
<320>          RESERVED5: word          ; expansion entry
<322>          RIS_SWEEPS: word         ; for RIS, the number of sweeps
<324>          TIMEBASE: enum           
<326>          VERT_COUPLING: enum      
<328>          PROBE_ATT: float         
<332>          FIXED_VERT_GAIN: enum    
<334>          BANDWIDTH_LIMIT: enum    
<336>          VERTICAL_VERNIER: float  
<340>          ACQ_VERT_OFFSET: float   
<344>          WAVE_SOURCE: enum        
<0>          TEXT: text               ; a list of ASCII characters
<0>          TRIGGER_TIME: double     ; for sequence acquisitions,
<8>          TRIGGER_OFFSET: double   ; the trigger offset is in seconds
<0>          RIS_OFFSET: double       ; seconds from trigger to zeroth
<0>          MEASUREMENT: data        ; the actual format of a data is
<0>          MEASUREMENT: data        ; the actual format of a data is
<0>          MEASUREMENT: data        ; the actual format of a data is
<0>          MEASUREMENT_1: data      ; data in DATA_ARRAY_1.
<0>          MEASUREMENT_2: data      ; data in DATA_ARRAY_2.
